# Generated by Django 5.1.2 on 2024-10-13 03:26

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(max_length=10)),
                ('finish', models.BooleanField(default=False)),
                ('time', models.IntegerField(default=0)),
                ('winner_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lobby',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Lobby', max_length=255)),
                ('locked', models.BooleanField(default=False)),
                ('owner_id', models.IntegerField(blank=True, null=True)),
                ('players_ids', models.JSONField(default=list)),
                ('ia_ids', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PongCustomGame',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('custom_ball', models.JSONField(blank=True, null=True)),
                ('custom_plateau', models.JSONField(blank=True, null=True)),
                ('custom_paddle', models.JSONField(blank=True, null=True)),
                ('custom_map', models.JSONField(blank=True, null=True)),
                ('custom_score', models.JSONField(blank=True, null=True)),
                ('custom_animation', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField()),
                ('elo_before', models.IntegerField()),
                ('elo_after', models.IntegerField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='game.game')),
            ],
        ),
        migrations.CreateModel(
            name='Game_Tournament',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('players_ids', models.JSONField(default=list)),
                ('ia_ids', models.JSONField(default=list)),
                ('winner_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('layer', models.IntegerField(default=0)),
                ('next_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='previous_game', to='game.game_tournament')),
                ('custom_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.pongcustomgame')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='custom_game',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.pongcustomgame'),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('UUID_LOBBY', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lobby', to='game.lobby')),
                ('games', models.ManyToManyField(related_name='tournament', to='game.game_tournament')),
            ],
        ),
        migrations.AddField(
            model_name='game_tournament',
            name='UUID_TOURNAMENT',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament', to='game.tournament'),
        ),
    ]
